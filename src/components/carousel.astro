---
const { itemsCount, folderUrl } = Astro.props;
---

<div class="flex relative items-center truncate">
  <div
    id="carousel"
    data-items-count={itemsCount}
    class="flex transition duration-200"
  >
    {
      [...Array(itemsCount)].map((_d, index) => (
        <div class="shrink-0 h-full w-full max-h-[570px] truncate flex items-center">
          <img
            src={`${folderUrl}/${index}.jpg`}
            alt=""
            class="w-full h-full object-cover carousel-item"
          />
        </div>
      ))
    }
  </div>
  <button
    class="w-[40px] absolute left-[40px] rotate-[-90deg] bg-white bg-clip-text"
    id="prev-btn"><img src="/arrowUpIcon.svg" alt="" /></button
  >
  <button
    class="w-[40px] absolute right-[40px] rotate-[90deg] bg-white bg-clip-text"
    id="next-btn"><img src="/arrowUpIcon.svg" alt="" /></button
  >
</div>

<script>
  const carouselEle = document.getElementById("carousel");
  const carouselItemsEle = Array.from(
    document.getElementsByClassName("carousel-item")
  );
  let currentIndex = 0;

  function showSlide(index: number) {
    if (carouselEle)
      carouselEle.style.transform = `translateX(-${index * 100}%)`;
  }

  function nextSlide() {
    currentIndex = (currentIndex + 1) % carouselItemsEle.length;
    showSlide(currentIndex);
  }

  function prevSlide() {
    currentIndex =
      (currentIndex - 1 + carouselItemsEle.length) % carouselItemsEle.length;
    showSlide(currentIndex);
  }

  let intervalId = setInterval(nextSlide, 5000);

  document.getElementById("next-btn")?.addEventListener("click", () => {
    nextSlide();
    clearInterval(intervalId);
    intervalId = setInterval(nextSlide, 5000);
  });
  document.getElementById("prev-btn")?.addEventListener("click", () => {
    prevSlide();
    clearInterval(intervalId);
    intervalId = setInterval(nextSlide, 5000);
  });
</script>
